# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[display_status]

[virtual_sdcard]
path: ~/gcode_files


[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[include shell_command.cfg]
[include usb-adxl345.cfg]
[include macros.cfg]
[include timelapse.cfg]
[include KlackEnder.cfg]
[include Adaptive_Mesh.cfg]
[include Line_Purge.cfg]
[include KAMP/*cfg]
[include klack_variables.cfg]                
[include klack_macros.cfg]
[include klack_screws_tilt_calculate.cfg]

[include z_calibration.cfg]

[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1

[skew_correction] 


[probe]
pin: ^PC2 #Probe-Stop Connection 
#z_offset: 0 #Measure per your specific setup
x_offset: 4 # negative = left of the nozzle
y_offset: 21 # negative = in front of of the nozzle
speed: 5.0
lift_speed: 15.0
sample_retract_dist: 1
samples: 2
samples_tolerance_retries: 6

#[include ./klack-bed-mesh-calibrate.cfg]      
#[include ./klack-adaptive-bed-mesh-calibrate.cfg] 

[bed_screws]
screw1: 29.00,11.00
#screw2: 197.25, 204.40
screw2: 200.00, 98.00
screw3: 29.00, 178.00

# [bed_mesh]
# speed: 80
# horizontal_move_z: 5
# mesh_min: 10, 10
# mesh_max: 190,190 #this may need to be calibrated for your individual printer
# probe_count: 5,5 #this is the number of probing points on X then Y axis
# algorithm: bicubic
# mesh_pps: 2,2
# fade_start: 1
# fade_end: 10
# fade_target: 0

[input_shaper]
shaper_freq_x: 60.0
shaper_type_x: mzv
shaper_freq_y: 48.2
shaper_type_y: mzv

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[screws_tilt_adjust]
screw1: 14,-8.00
screw1_name: Front left screw
#screw2: 184,2
#screw2_name: Front right screw
screw2: 184.00,74.00
screw2_name: Middle right screw
screw3: 14.00,157.00
screw3_name: Rear left screw
horizontal_move_z: 10
speed: 250
screw_thread: CW-M4

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0.0
position_max: 240
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: -8
position_max: 238
position_min: -8
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
stealthchop_threshold:  999999

[stepper_z]
step_pin: PB0
dir_pin: !PC5 
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
#endstop_pin: probe:z_virtual_endstop
position_endstop: 0.0
position_min: -8
position_max: 250

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999

#[safe_z_home]
#home_xy_position: 110, 110 # Change coordinates to the center of your print bed
#speed: 50
#z_hop: 10                 # Move up 10mm
#z_hop_speed: 5

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 7.60
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: piddling
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: -10
max_temp: 250
max_extrude_only_distance: 100
pressure_advance: 0.060 #PETG
pressure_advance_smooth_time: 0.04
max_extrude_cross_section: 5

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: -10
max_temp: 130

[heater_fan heatbreak_cooling_fan]
pin: PC7

[heater_fan controller_fan]
pin: PB15

[fan]
pin: PC6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_090033000150414D39343620-if00


[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>



#############################
 #MACROS
#############################

[gcode_macro Save_Settings]
description: Save Settings
gcode:
  SAVE_CONFIG

[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %} 
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %} 
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro UNLOAD_FILAMENT]
description: Unloads Filament from extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=UNLOAD_state
    {% set Z = params.Z|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}

    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ Z, z_diff ] | min%}
    
    G91                   # relative positioning
    G0 Z{ z_safe_lift }
    # Reset extruder position
    G92 E0
    G1 E5.0 F300        # extrude a little
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 5 * 60 }   # finish the unload
    RESTORE_GCODE_STATE NAME=UNLOAD_state
  {% endif %}

[gcode_macro PURGE]
description: Extrudes filament, used to clean out previous filament
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
  {% set PURGE_AMOUNT = params.PURGE_AMOUNT|default(40)|float %}
    SAVE_GCODE_STATE NAME=PURGE_state
    G91                   # relative coords
    G1 E{PURGE_AMOUNT} F{ 5 * 60 }  # purge
    RESTORE_GCODE_STATE NAME=PURGE_state
  {% endif %}

[gcode_macro LOAD_FILAMENT]
description: Loads filament into the extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=LOAD_state
    G91                   # Relative coords
    G1 E50 F{ 5 * 60 }  # extrude
    G4 P{ 0.9 * 1000 }    # dwell (ms)
    G1 E25.0 F{ 5 * 60 }  # extrude a little more
    _ENABLE_FS
    RESTORE_GCODE_STATE NAME=LOAD_state
  {% endif %}

[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(230)|float %} 
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %} 
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro DISABLE_STEPPERS]
description: Disables the printers stepper motors
gcode:
 M84 X Y E

[gcode_macro BED_TRAMMING_1]
description: Heats bed and starts process to level the bed with the screws
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %} 
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
  HOME_CHECK
  M190 S{BED_TEMP}
  SCREWS_TILT_CALCULATE

[gcode_macro BED_TRAMMING_2]
description: Continues the bed screw leveling process
gcode:
  SCREWS_TILT_CALCULATE

#[gcode_macro BED_MESH]
#description: Heats bed, makes a mesh and saves it
#gcode:
  #{% set BED_TEMP = params.BED_TEMP|default(60)|float %} 
  #SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
  #HOME_CHECK
  #M190 S{BED_TEMP}
  #BED_MESH_CLEAR
  #BED_MESH_CALIBRATE
  #TURN_OFF_HEATERS
  #SAVE_CONFIG

[gcode_macro Home_Check]
description: Checks if the printer is homed, if not it homes the printer
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}

# [gcode_macro START_PRINT]
# gcode:
#     {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
#     {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(0)|float %}
#     G92 E0 # Reset Extruder
#     G28  # Home Axis
#     M140 S{80} # Set Heat Bed temperature
#     M104 S235 # start warming extruder to 200
#     M190 S{80} # Wait for Heat Bed temperature  
#     SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1 PROBE_DOCK_ENABLE=1
#     SETUP_LINE_PURGE DISPLAY_PARAMETERS=1 ADAPTIVE_ENABLE=1
#     G1 X0.1 Y20 Z0.3 F5000.0 # Move to start position
#     M109 S{235} # Wait for Extruder temperature
#     G92 E0 # Reset Extruder
#     G1 Z2.0 F3000 # Move Z Axis up little to prevent scratching of Heat Bed
#     #G1 E20 F300
#     #G92 E0
#     ATTACH_PROBE
#     BED_MESH_CALIBRATE
#     DOCK_PROBE
#     LINE_PURGE

[gcode_macro END_PRINT]
gcode:
    G91 ;Relative positioning
    G1 E-2 F2700 ;Retract a bit
    G1 E-2 Z0.2 F2400 ;Retract and raise Z
    G1 X5 Y5 F3000 ;Wipe out
    G1 Z10 ;Raise Z more
    G90 ;Absolute positioning
    G1 X0 Y230 ;Present print
    M106 S0 ;Turn-off fan
    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed
    M84 X Y E ;Disable all steppers but Z

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

# [gcode_macro BED_MESH_CALIBRATE]
# rename_existing: BED_MESH_CALIBRATE_BASE
# ; gcode parameters
# variable_parameter_AREA_START : 0,0
# variable_parameter_AREA_END : 0,0
# ; the clearance between print area and probe area 
# variable_mesh_area_offset : 5.0
# ; number of sample per probe point
# variable_probe_samples : 2
# ; minimum probe count
# variable_min_probe_count : 3
# ; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
# variable_probe_count_scale_factor : 1.0
# gcode:
#     {% if params.AREA_START and params.AREA_END %}
#         {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
#         {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
#         {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
#         {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
#         {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

#         {% set area_min_x = params.AREA_START.split(",")[0]|float %}
# 	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
# 	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
# 	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

#         {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
#         {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
	
# 	{% set meshMaxPointX = meshPointX %}
# 	{% set meshMaxPointY = meshPointY %}


#         {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
#             {% if area_min_x - mesh_area_offset >=  safe_min_x %}
#                 {% set area_min_x = area_min_x - mesh_area_offset %}
#             {% else %}
#                 {% set area_min_x = safe_min_x %}
#             {% endif %}

#             {% if area_min_y - mesh_area_offset >=  safe_min_y %}
#                 {% set area_min_y = area_min_y - mesh_area_offset %}
#             {% else %}
#                 {% set area_min_y = safe_min_y %}
#             {% endif %}

#             {% if area_max_x + mesh_area_offset <=  safe_max_x %}
#                 {% set area_max_x = area_max_x + mesh_area_offset %}
#             {% else %}
#                 {% set area_max_x = safe_max_x %}
#             {% endif %}

#             {% if area_max_y + mesh_area_offset <=  safe_max_y %}
#                 {% set area_max_y = area_max_y + mesh_area_offset %}
#             {% else %}
#                 {% set area_max_y = safe_max_y %}
#             {% endif %}

#             {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
#             {% if meshPointX < min_probe_count %}
#                 {% set meshPointX = min_probe_count %}
#             {% endif %}
# 	    {% if meshPointX > meshMaxPointX %}
#                 {% set meshPointX = meshMaxPointX %}
#             {% endif %}

#             {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
#             {% if meshPointY < min_probe_count %}
#                 {% set meshPointY = min_probe_count %}
#             {% endif %}
# 	    {% if meshPointY > meshMaxPointY %}
#                 {% set meshPointY = meshMaxPointY %}
#             {% endif %}

#             BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int}
#         {% else %}
#             BED_MESH_CALIBRATE_BASE
#         {% endif %}
#     {% else %}
#         BED_MESH_CALIBRATE_BASE
#     {% endif %}

[gcode_macro START_PRINT]
gcode:
    G92 E0 ; Reset Extruder
    {% set bed_temp = params.BED_TEMP|default(0)|float %}
    {% set extruder_temp = params.EXTRUDER_TEMP|default(0)|float %}
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
    M140 S{bed_temp} ;Start heating bed
    G28 ; Home all axes
    M190 S{bed_temp} ;Wait for bed to reach temp before proceeding
    #Z_TILT_ADJUST
    M104 S{extruder_temp} ;Start heating extruder
    PROBE_OUT
    BED_MESH_CALIBRATE
    G1 Y0 F10000
    PROBE_IN
    M109 S{extruder_temp} ;Wait for extruder to reach temp before proceeding
    CALIBRATE_Z #ADD AFTER YOUR LEVELING ROUTINE AND BEFORE PRIME LINE, BED AND NOZZLE SHOULD BE FULLY HEATED IF USING BRUSH ELSE 180 ON NOZZLE AT LEAST
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X0.1 Y20 Z0.3 F5000.0 ; Move to start position
    #G1 X0.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
    #G1 X0.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
    #G1 X0.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
    G92 E0 ; Reset Extruder
    G1 Z3.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X5 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish
    LINE_PURGE

[gcode_macro NOZZLE_BRUSH]
gcode:
    G90
    G1 Z16 F3000 # raise z to clear brush
    G1 X20 Y223 F6000 #starting coordinates of brush
    G1 Z3.5 F3000  #z height of scrub
    G1 X55 F10000 # end location of scrub
    G1 X27 F10000
    G1 X55 F10000
    G1 X27 F10000
    G1 X55 F10000
    G1 X27 F10000
    G1 X55 F10000
    G1 X27 F10000
    G1 X65 F10000 #final swipe and clear
    G1 Z16 F3000  #raise z to clear
    
[gcode_macro _PROBE_OUT] #USE THIS TO REPLACE PROBE_OUT MACRO ONLY IN Z_CALIBRATION CONFIG
gcode:
    G90
    G1 X236 F4000 #X LOCATION TO PICK UP PROBE
    G4 P300
    G1 Z20
    G1 X151 #X LOCATION OF PROBE BODY, USE X COORDINATE FROM SWITCH_XY_POSITION IN Z_CALIBRATION

[gcode_macro update_git]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash /home/pi/printer_data/klipper-backup/script.sh
timeout: 90.0
verbose: True

##############################################
#Filaments
##############################################

[gcode_macro PREHEAT_PETG_Hatchbox]
description: Preheats extruder and bed for PLA printing, extruder set to 150 to prevent filament leaking while homing etc
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(230)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(70)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

[gcode_macro PREHEAT_PLA_Hatchbox]
description: Preheats extruder and bed for PLA printing, extruder set to 150 to prevent filament leaking while homing etc
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(225)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

[gcode_macro PREHEAT_PLA_Eryone]
description: Preheats extruder and bed for PLA printing, extruder set to 150 to prevent filament leaking while homing etc
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(65)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

[gcode_macro PREHEAT_PLA+_Eryone]
description: Preheats extruder and bed for PLA printing, extruder set to 150 to prevent filament leaking while homing etc
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(65)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

[gcode_macro PREHEAT_PETG_Polymaker]
description: Preheats extruder and bed for PLA printing, extruder set to 150 to prevent filament leaking while homing etc
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(235)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

[gcode_macro PREHEAT_PETG_California_Filament]
description: Preheats extruder and bed for PLA printing, extruder set to 150 to prevent filament leaking while homing etc
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(240)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(70)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}


#####################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 18.179
#*# pid_ki = 0.911
#*# pid_kd = 90.668
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.623
#*# pid_ki = 1.173
#*# pid_kd = 1093.144
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.024250, 0.045250, 0.058500, 0.081000, 0.091500
#*# 	  -0.015000, 0.007250, 0.027750, 0.050000, 0.066000
#*# 	  -0.047500, -0.017000, 0.000000, 0.029000, 0.043500
#*# 	  -0.042000, -0.016750, -0.004250, 0.010000, 0.021000
#*# 	  -0.025250, -0.008500, -0.001500, 0.002500, 0.011250
#*# tension = 0.2
#*# min_x = 8.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 5
#*# min_y = 30.0
#*# x_count = 5
#*# max_y = 190.0
#*# mesh_x_pps = 5
#*# max_x = 190.0
#*#
#*# [probe]
#*# z_offset = 0.419